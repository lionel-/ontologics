% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getConcept.R
\name{getConcept}
\alias{getConcept}
\title{Get a concept from an ontology}
\usage{
getConcept(..., exact = TRUE, tree = FALSE, missing = FALSE, ontoDir = NULL)
}
\arguments{
\item{...}{combination of column name and value to filter the column by. The
value to filter by can be provided as regular expression.}

\item{exact}{\code{\link[=logical]{logical(1)}}\cr}

\item{tree}{\code{\link[=logical]{logical(1)}}\cr whether or not to output the whole
ontology tree starting from the given search terms.}

\item{missing}{\code{\link[=logical]{logical(1)}}\cr whether or not to give only those
values that are currently missing from the ontology.}

\item{ontoDir}{\code{\link[=character]{character(1)}}\cr the path where the ontology in
which to search is stored. In case you are building a point or areal
database and have used the function \code{\link[luckiTools]{start_occurrenceDB}}
or \code{\link[luckiTools]{start_arealDB}}, this path is already stored in
the options (see \code{getOption("onto_path")}).}
}
\description{
Get a concept from an ontology
}
\examples{
\dontrun{
# exact matches
getConcept(label_en = "Forest land")

# use regular expressions ...
getConcept(label_en = "/*orest")

# ... and filter more
getConcept(label_en = "/*orest", class = "landuse group")

# get all concepts that depend on another concept
getConcept(label_en = "Forest land", tree = TRUE)

# get all labels (and filter with other functions)
getConcept(labels = TRUE)
}

}
\seealso{
Other ontology functions: 
\code{\link{newConcept}()},
\code{\link{newMapping}()}
}
\concept{ontology functions}
